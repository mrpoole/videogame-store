{"ast":null,"code":"import axios from 'axios';\nimport types from './types';\nimport config from '../config';\nimport { getGameListData, getSingleGameData } from './rawg-api';\nconst GAME_DATABASE_CONFIG = {\n  baseUrl: 'https://gamedatabasestefan-skliarovv1.p.rapidapi.com/',\n  headers: {\n    'content-type': 'application/x-www-form-urlencoded',\n    'x-rapidapi-key': config.GAMEDATABASE_API_KEY,\n    'x-rapidapi-host': 'GameDatabasestefan-skliarovV1.p.rapidapi.com'\n  }\n};\nexport async function getGameListAction(queryCategory = null, queryItem = null) {\n  const response = getGameListData(queryCategory, queryItem);\n  return {\n    type: types.GET_GAME_LIST,\n    payload: response\n  };\n}\nexport async function getSingleGameAction(id) {\n  const response = getSingleGameData(id);\n  return {\n    type: types.GET_SINGLE_GAME,\n    payload: response\n  };\n}\nexport function clearSingleItemAction() {\n  return {\n    type: types.CLEAR_SINGLE_GAME\n  };\n}\nexport async function getReviewsAction() {\n  const options = {\n    method: 'POST',\n    url: `${GAME_DATABASE_CONFIG.baseUrl}getReviews`,\n    headers: GAME_DATABASE_CONFIG.headers,\n    data: {\n      reviewIds: 'undefined',\n      userKey: 'undefined',\n      requestUrl: 'undefined'\n    }\n  };\n  const response = axios.request(options).then(resp => resp.data).catch(error => {\n    console.error(error);\n  });\n  return {\n    type: types.GET_REVIEWS_LIST,\n    payload: response\n  };\n} // export async function getList(lat, lng) {\n//   const resp = await axios({\n//     method: 'GET',\n//     params: { lat, lng },\n//     url: `/api/results_data.php`,\n//     headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n//   });\n//   // console.log(\"resultsData PHP Call successful:\", resp.data.data);\n//   return {\n//     type: types.GET_RESULTS_DATA,\n//     payload: resp.data.data,\n//   };\n// }\n// export async function getSingleItem(itemId) {\n//   const resp = await axios({\n//     method: 'GET',\n//     params: { itemId },\n//     url: `/api/park_details.php`,\n//     headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n//   });\n//   // console.log (\"POST singleItem PHP Call success:\", resp.data.data);\n//   return {\n//     type: types.GET_SINGLE_ITEM,\n//     payload: resp.data.data,\n//   };\n// }\n// export function addItem(item) {\n//   // localStorage.setItem('itinerary', resp.data.token)\n//   return {\n//     type: types.ADD_ITEM,\n//     payload: item,\n//   };\n// }\n// export function removeItem(itemId) {\n//   // localStorage.removeItem('token')\n//   return {\n//     type: types.REMOVE_ITEM,\n//     payload: itemId,\n//   };\n// }","map":{"version":3,"sources":["/Users/michellepoole/Desktop/videogame-store/src/actions/index.js"],"names":["axios","types","config","getGameListData","getSingleGameData","GAME_DATABASE_CONFIG","baseUrl","headers","GAMEDATABASE_API_KEY","getGameListAction","queryCategory","queryItem","response","type","GET_GAME_LIST","payload","getSingleGameAction","id","GET_SINGLE_GAME","clearSingleItemAction","CLEAR_SINGLE_GAME","getReviewsAction","options","method","url","data","reviewIds","userKey","requestUrl","request","then","resp","catch","error","console","GET_REVIEWS_LIST"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,YAAnD;AAEA,MAAMC,oBAAoB,GAAG;AAC3BC,EAAAA,OAAO,EAAE,uDADkB;AAE3BC,EAAAA,OAAO,EAAE;AACP,oBAAgB,mCADT;AAEP,sBAAkBL,MAAM,CAACM,oBAFlB;AAGP,uBAAmB;AAHZ;AAFkB,CAA7B;AASA,OAAO,eAAeC,iBAAf,CACLC,aAAa,GAAG,IADX,EAELC,SAAS,GAAG,IAFP,EAGL;AACA,QAAMC,QAAQ,GAAGT,eAAe,CAACO,aAAD,EAAgBC,SAAhB,CAAhC;AAEA,SAAO;AACLE,IAAAA,IAAI,EAAEZ,KAAK,CAACa,aADP;AAELC,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID;AAED,OAAO,eAAeI,mBAAf,CAAmCC,EAAnC,EAAuC;AAC5C,QAAML,QAAQ,GAAGR,iBAAiB,CAACa,EAAD,CAAlC;AAEA,SAAO;AACLJ,IAAAA,IAAI,EAAEZ,KAAK,CAACiB,eADP;AAELH,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID;AAED,OAAO,SAASO,qBAAT,GAAiC;AACtC,SAAO;AACLN,IAAAA,IAAI,EAAEZ,KAAK,CAACmB;AADP,GAAP;AAGD;AAED,OAAO,eAAeC,gBAAf,GAAkC;AACvC,QAAMC,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,GAAG,EAAG,GAAEnB,oBAAoB,CAACC,OAAQ,YAFvB;AAGdC,IAAAA,OAAO,EAAEF,oBAAoB,CAACE,OAHhB;AAIdkB,IAAAA,IAAI,EAAE;AACJC,MAAAA,SAAS,EAAE,WADP;AAEJC,MAAAA,OAAO,EAAE,WAFL;AAGJC,MAAAA,UAAU,EAAE;AAHR;AAJQ,GAAhB;AAWA,QAAMhB,QAAQ,GAAGZ,KAAK,CACnB6B,OADc,CACNP,OADM,EAEdQ,IAFc,CAERC,IAAD,IAAUA,IAAI,CAACN,IAFN,EAGdO,KAHc,CAGPC,KAAD,IAAW;AAChBC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,GALc,CAAjB;AAOA,SAAO;AACLpB,IAAAA,IAAI,EAAEZ,KAAK,CAACkC,gBADP;AAELpB,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID,C,CAED;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios';\nimport types from './types';\nimport config from '../config';\nimport { getGameListData, getSingleGameData } from './rawg-api';\n\nconst GAME_DATABASE_CONFIG = {\n  baseUrl: 'https://gamedatabasestefan-skliarovv1.p.rapidapi.com/',\n  headers: {\n    'content-type': 'application/x-www-form-urlencoded',\n    'x-rapidapi-key': config.GAMEDATABASE_API_KEY,\n    'x-rapidapi-host': 'GameDatabasestefan-skliarovV1.p.rapidapi.com',\n  },\n};\n\nexport async function getGameListAction(\n  queryCategory = null,\n  queryItem = null\n) {\n  const response = getGameListData(queryCategory, queryItem);\n\n  return {\n    type: types.GET_GAME_LIST,\n    payload: response,\n  };\n}\n\nexport async function getSingleGameAction(id) {\n  const response = getSingleGameData(id);\n\n  return {\n    type: types.GET_SINGLE_GAME,\n    payload: response,\n  };\n}\n\nexport function clearSingleItemAction() {\n  return {\n    type: types.CLEAR_SINGLE_GAME,\n  };\n}\n\nexport async function getReviewsAction() {\n  const options = {\n    method: 'POST',\n    url: `${GAME_DATABASE_CONFIG.baseUrl}getReviews`,\n    headers: GAME_DATABASE_CONFIG.headers,\n    data: {\n      reviewIds: 'undefined',\n      userKey: 'undefined',\n      requestUrl: 'undefined',\n    },\n  };\n\n  const response = axios\n    .request(options)\n    .then((resp) => resp.data)\n    .catch((error) => {\n      console.error(error);\n    });\n\n  return {\n    type: types.GET_REVIEWS_LIST,\n    payload: response,\n  };\n}\n\n// export async function getList(lat, lng) {\n//   const resp = await axios({\n//     method: 'GET',\n//     params: { lat, lng },\n//     url: `/api/results_data.php`,\n\n//     headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n//   });\n//   // console.log(\"resultsData PHP Call successful:\", resp.data.data);\n//   return {\n//     type: types.GET_RESULTS_DATA,\n//     payload: resp.data.data,\n//   };\n// }\n\n// export async function getSingleItem(itemId) {\n//   const resp = await axios({\n//     method: 'GET',\n//     params: { itemId },\n//     url: `/api/park_details.php`,\n//     headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n//   });\n//   // console.log (\"POST singleItem PHP Call success:\", resp.data.data);\n//   return {\n//     type: types.GET_SINGLE_ITEM,\n//     payload: resp.data.data,\n//   };\n// }\n\n// export function addItem(item) {\n//   // localStorage.setItem('itinerary', resp.data.token)\n//   return {\n//     type: types.ADD_ITEM,\n//     payload: item,\n//   };\n// }\n\n// export function removeItem(itemId) {\n//   // localStorage.removeItem('token')\n//   return {\n//     type: types.REMOVE_ITEM,\n//     payload: itemId,\n//   };\n// }\n"]},"metadata":{},"sourceType":"module"}
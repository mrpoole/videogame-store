{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/michellepoole/Desktop/videogame-store/src/components/browse/BrowsePage.js\";\n\n/*eslint-disable*/\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'react-bootstrap'; // import { getGameListData, getGenreListData } from '../../actions/rawg-api';\n\nimport { getGameListAction, getGenreListAction, clearGameListAction } from '../../actions/index';\nimport CategoryList from './CategoryList';\nimport GameItem from '../landing_page/game_list/game_item';\nimport LoadingSpinner from '../shared/loading_spinner';\nimport '../../scss/browse/browse.scss';\n\nclass BrowsePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      path: props.match.path,\n      genreList: [],\n      gameList: []\n    };\n    console.log('props', props, this.state.path);\n    console.log('category', this.props.match.params.category);\n  }\n\n  async componentDidMount() {\n    const genreResponse = await getGenreListAction();\n    this.setState({\n      genreList: genreResponse.map(res => ({\n        id: res.id,\n        name: res.name\n      })),\n      gameList: await this.props.getGameListAction('genre', this.props.match.params.category, 'released'),\n      path: this.props.location.pathname\n    });\n    console.log('games list param', this.props.match.params.category, 'gameslist', this.state.gameList);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    // console.log('updated', prevProps, prevState);\n    if (prevProps.location.pathname !== this.props.location.pathname) {\n      console.log(prevProps.match.params.category, this.props.match.params.category);\n      const list = await getGameListData('genres', this.props.match.params.category, 'released');\n      console.log('updated', list);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.clearGameListAction();\n  }\n\n  render() {\n    if (!this.state.gameList.length) {\n      return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 14\n      }, this);\n    }\n\n    const galleryData = this.state.gameList.map(game => /*#__PURE__*/_jsxDEV(GameItem, {\n      game: game\n    }, game.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"w-100 py-5\",\n      id: \"browse-container\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: {\n            order: 2\n          },\n          lg: {\n            span: 10,\n            order: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pb-2\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Browsing \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"browsing-title\",\n                children: this.props.match.params.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 27\n              }, this), \" Games\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-wrap align-content-center\",\n            children: galleryData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: {\n            span: 12,\n            order: 1\n          },\n          lg: {\n            span: 2,\n            order: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(CategoryList, {\n            genreList: this.state.genreList,\n            selectCategory: this.selectCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    item: state.list.single\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getGameListAction,\n  getGenreListAction,\n  clearGameListAction\n})(BrowsePage);","map":{"version":3,"sources":["/Users/michellepoole/Desktop/videogame-store/src/components/browse/BrowsePage.js"],"names":["React","Component","connect","Container","Row","Col","getGameListAction","getGenreListAction","clearGameListAction","CategoryList","GameItem","LoadingSpinner","BrowsePage","constructor","props","state","path","match","genreList","gameList","console","log","params","category","componentDidMount","genreResponse","setState","map","res","id","name","location","pathname","componentDidUpdate","prevProps","prevState","list","getGameListData","componentWillUnmount","render","length","galleryData","game","order","span","selectCategory","mapStateToProps","item","single"],"mappings":"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","sourcesContent":["/*eslint-disable*/\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'react-bootstrap';\n// import { getGameListData, getGenreListData } from '../../actions/rawg-api';\nimport { getGameListAction, getGenreListAction, clearGameListAction } from '../../actions/index';\nimport CategoryList from './CategoryList';\nimport GameItem from '../landing_page/game_list/game_item';\nimport LoadingSpinner from '../shared/loading_spinner';\nimport '../../scss/browse/browse.scss';\n\nclass BrowsePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      path: props.match.path,\n      genreList: [],\n      gameList: [],\n    };\n\n    console.log('props', props, this.state.path);\n    console.log('category', this.props.match.params.category);\n  }\n\n  async componentDidMount() {\n    const genreResponse = await getGenreListAction();\n    this.setState({\n      genreList: genreResponse.map((res) => ({ id: res.id, name: res.name })),\n      gameList: await this.props.getGameListAction(\n        'genre',\n        this.props.match.params.category,\n        'released'\n      ),\n      path: this.props.location.pathname,\n    });\n    console.log('games list param', this.props.match.params.category, 'gameslist', this.state.gameList);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    // console.log('updated', prevProps, prevState);\n    if (prevProps.location.pathname !== this.props.location.pathname) {\n      console.log(prevProps.match.params.category, this.props.match.params.category);\n      const list = await getGameListData(\n        'genres',\n        this.props.match.params.category,\n        'released'\n      );\n      console.log('updated', list);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.clearGameListAction();\n  }\n\n  render() {\n    if (!this.state.gameList.length) {\n      return <LoadingSpinner />;\n    }\n\n    const galleryData = this.state.gameList.map((game) => (\n      <GameItem key={game.id} game={game} />\n    ));\n\n    return (\n      <Container className=\"w-100 py-5\" id=\"browse-container\">\n        <Row>\n          <Col xs={{ order: 2 }} lg={{ span: 10, order: 1 }}>\n            <div className=\"pb-2\">\n              <p>Browsing <span className=\"browsing-title\">{this.props.match.params.category}</span> Games</p>\n            </div>\n            <div className=\"d-flex flex-wrap align-content-center\">\n              {galleryData}\n            </div>\n          </Col>\n          <Col xs={{ span: 12, order: 1 }} lg={{ span: 2, order: 2 }}>\n            <CategoryList\n              genreList={this.state.genreList}\n              selectCategory={this.selectCategory}\n            />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    item: state.list.single,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getGameListAction,\n  getGenreListAction,\n  clearGameListAction,\n})(BrowsePage);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import types from '../actions/types';\n\nfunction checkLocalStorage() {\n  if (localStorage.getItem('shoppingCart')) {\n    return JSON.parse(localStorage.getItem('shoppingCart'));\n  }\n\n  return [];\n}\n\nconst DEFAULT_STATE = {\n  list: [],\n  single: {},\n  shoppingCart: checkLocalStorage()\n};\nexport default function (state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    // case types.ADD_ITEM:\n    //   state.shoppingCart.push(action.payload);\n    //   localStorage.setItem('shoppingCart', JSON.stringify(state.shoppingCart));\n    //   return { ...state };\n    // case types.REMOVE_ITEM:\n    // const filteredshoppingCart = state.shoppingCart.filter(\n    //   (item) => item.parkinfo[0].id !== action.payload\n    // );\n    // localStorage.setItem('shoppingCart', JSON.stringify(filteredshoppingCart));\n    // return { ...state, shoppingCart: filteredshoppingCart };\n    case types.CLEAR_SINGLE_GAME:\n      return { ...state,\n        single: {}\n      };\n\n    case types.GET_SINGLE_GAME:\n      return { ...state,\n        single: action.payload\n      };\n\n    case types.GET_GAME_LIST:\n      return { ...state,\n        list: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/michellepoole/Desktop/videogame-store/src/reducers/results_reducer.js"],"names":["types","checkLocalStorage","localStorage","getItem","JSON","parse","DEFAULT_STATE","list","single","shoppingCart","state","action","type","CLEAR_SINGLE_GAME","GET_SINGLE_GAME","payload","GET_GAME_LIST"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;;AAEA,SAASC,iBAAT,GAA6B;AAC3B,MAAIC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAJ,EAA0C;AACxC,WAAOC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAAP;AACD;;AACD,SAAO,EAAP;AACD;;AAED,MAAMG,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,MAAM,EAAE,EAFY;AAGpBC,EAAAA,YAAY,EAAER,iBAAiB;AAHX,CAAtB;AAMA,eAAe,UAAUS,KAAK,GAAGJ,aAAlB,EAAiCK,MAAjC,EAAyC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAKZ,KAAK,CAACa,iBAAX;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYF,QAAAA,MAAM,EAAE;AAApB,OAAP;;AACF,SAAKR,KAAK,CAACc,eAAX;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYF,QAAAA,MAAM,EAAEG,MAAM,CAACI;AAA3B,OAAP;;AACF,SAAKf,KAAK,CAACgB,aAAX;AACE,aAAO,EAAE,GAAGN,KAAL;AAAYH,QAAAA,IAAI,EAAEI,MAAM,CAACI;AAAzB,OAAP;;AACF;AACE,aAAOL,KAAP;AAlBJ;AAoBD","sourcesContent":["import types from '../actions/types';\n\nfunction checkLocalStorage() {\n  if (localStorage.getItem('shoppingCart')) {\n    return JSON.parse(localStorage.getItem('shoppingCart'));\n  }\n  return [];\n}\n\nconst DEFAULT_STATE = {\n  list: [],\n  single: {},\n  shoppingCart: checkLocalStorage(),\n};\n\nexport default function (state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    // case types.ADD_ITEM:\n    //   state.shoppingCart.push(action.payload);\n    //   localStorage.setItem('shoppingCart', JSON.stringify(state.shoppingCart));\n    //   return { ...state };\n    // case types.REMOVE_ITEM:\n    // const filteredshoppingCart = state.shoppingCart.filter(\n    //   (item) => item.parkinfo[0].id !== action.payload\n    // );\n    // localStorage.setItem('shoppingCart', JSON.stringify(filteredshoppingCart));\n    // return { ...state, shoppingCart: filteredshoppingCart };\n    case types.CLEAR_SINGLE_GAME:\n      return { ...state, single: {} };\n    case types.GET_SINGLE_GAME:\n      return { ...state, single: action.payload };\n    case types.GET_GAME_LIST:\n      return { ...state, list: action.payload };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
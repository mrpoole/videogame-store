{"ast":null,"code":"import axios from 'axios';\nimport config from '../config';\nconst RAWG_CONFIG = {\n  baseUrl: 'https://rawg-video-games-database.p.rapidapi.com/',\n  headers: {\n    'x-rapidapi-key': config.RAWG_API_KEY,\n    'x-rapidapi-host': 'rawg-video-games-database.p.rapidapi.com',\n    useQueryString: true\n  }\n};\nexport async function getGenreList() {}\nexport async function getGameList(queryCategory = null, queryItem = null) {\n  // sample url with query string: https://rawg-video-games-database.p.rapidapi.com/games?genres=action\n  const query = queryCategory ? `?${queryCategory}=${queryItem}` : '';\n  const options = {\n    method: 'GET',\n    url: `${RAWG_CONFIG.baseUrl}games${query}`,\n    headers: RAWG_CONFIG.headers\n  };\n  let list;\n  await axios.request(options).then(resp => {\n    list = resp.data.results;\n  }).catch(error => {\n    console.error(error);\n  });\n  return list;\n}\nexport async function getSingleGameDetail(id) {\n  const options = {\n    method: 'GET',\n    url: `${RAWG_CONFIG.baseUrl}games/${id}`,\n    headers: RAWG_CONFIG.headers\n  };\n  let item;\n  await axios.request(options).then(resp => {\n    item = resp.data;\n  }).catch(error => {\n    console.error(error);\n  });\n  return item;\n}","map":{"version":3,"sources":["/Users/michellepoole/Desktop/videogame-store/src/actions/rawg-api.js"],"names":["axios","config","RAWG_CONFIG","baseUrl","headers","RAWG_API_KEY","useQueryString","getGenreList","getGameList","queryCategory","queryItem","query","options","method","url","list","request","then","resp","data","results","catch","error","console","getSingleGameDetail","id","item"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,OAAO,EAAE,mDADS;AAElBC,EAAAA,OAAO,EAAE;AACP,sBAAkBH,MAAM,CAACI,YADlB;AAEP,uBAAmB,0CAFZ;AAGPC,IAAAA,cAAc,EAAE;AAHT;AAFS,CAApB;AASA,OAAO,eAAeC,YAAf,GAA8B,CAEpC;AAED,OAAO,eAAeC,WAAf,CAA2BC,aAAa,GAAG,IAA3C,EAAiDC,SAAS,GAAG,IAA7D,EAAmE;AACxE;AACA,QAAMC,KAAK,GAAGF,aAAa,GAAI,IAAGA,aAAc,IAAGC,SAAU,EAAlC,GAAsC,EAAjE;AACA,QAAME,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,KADM;AAEdC,IAAAA,GAAG,EAAG,GAAEZ,WAAW,CAACC,OAAQ,QAAOQ,KAAM,EAF3B;AAGdP,IAAAA,OAAO,EAAEF,WAAW,CAACE;AAHP,GAAhB;AAMA,MAAIW,IAAJ;AAEA,QAAMf,KAAK,CACRgB,OADG,CACKJ,OADL,EAEHK,IAFG,CAEGC,IAAD,IAAU;AACdH,IAAAA,IAAI,GAAGG,IAAI,CAACC,IAAL,CAAUC,OAAjB;AACD,GAJG,EAKHC,KALG,CAKIC,KAAD,IAAW;AAChBC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,GAPG,CAAN;AAQA,SAAOP,IAAP;AACD;AAED,OAAO,eAAeS,mBAAf,CAAmCC,EAAnC,EAAuC;AAC5C,QAAMb,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,KADM;AAEdC,IAAAA,GAAG,EAAG,GAAEZ,WAAW,CAACC,OAAQ,SAAQsB,EAAG,EAFzB;AAGdrB,IAAAA,OAAO,EAAEF,WAAW,CAACE;AAHP,GAAhB;AAMA,MAAIsB,IAAJ;AAEA,QAAM1B,KAAK,CACRgB,OADG,CACKJ,OADL,EAEHK,IAFG,CAEGC,IAAD,IAAU;AACdQ,IAAAA,IAAI,GAAGR,IAAI,CAACC,IAAZ;AACD,GAJG,EAKHE,KALG,CAKIC,KAAD,IAAW;AAChBC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,GAPG,CAAN;AAQA,SAAOI,IAAP;AACD","sourcesContent":["import axios from 'axios';\nimport config from '../config';\n\nconst RAWG_CONFIG = {\n  baseUrl: 'https://rawg-video-games-database.p.rapidapi.com/',\n  headers: {\n    'x-rapidapi-key': config.RAWG_API_KEY,\n    'x-rapidapi-host': 'rawg-video-games-database.p.rapidapi.com',\n    useQueryString: true,\n  },\n};\n\nexport async function getGenreList() {\n  \n}\n\nexport async function getGameList(queryCategory = null, queryItem = null) {\n  // sample url with query string: https://rawg-video-games-database.p.rapidapi.com/games?genres=action\n  const query = queryCategory ? `?${queryCategory}=${queryItem}` : '';\n  const options = {\n    method: 'GET',\n    url: `${RAWG_CONFIG.baseUrl}games${query}`,\n    headers: RAWG_CONFIG.headers,\n  };\n\n  let list;\n\n  await axios\n    .request(options)\n    .then((resp) => {\n      list = resp.data.results;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n  return list;\n}\n\nexport async function getSingleGameDetail(id) {\n  const options = {\n    method: 'GET',\n    url: `${RAWG_CONFIG.baseUrl}games/${id}`,\n    headers: RAWG_CONFIG.headers,\n  };\n\n  let item;\n\n  await axios\n    .request(options)\n    .then((resp) => {\n      item = resp.data;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n  return item;\n}\n"]},"metadata":{},"sourceType":"module"}
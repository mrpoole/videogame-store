{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/michellepoole/Desktop/videogame-store/src/components/browse/BrowsePage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { getGameListData, getGenreListData } from '../../actions/rawg-api';\nimport { clearGameListAction } from '../../actions/index';\nimport CategoryList from './CategoryListMobile';\nimport GameItem from '../landing_page/game_list/game_item';\nimport LoadingSpinner from '../shared/loading_spinner';\nimport '../../scss/browse/browse.scss';\n\nclass BrowsePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      genreList: [],\n      gameList: []\n    };\n  }\n\n  async componentDidMount() {\n    const genreResponse = await getGenreListData();\n    this.setState({\n      genreList: genreResponse.map(res => ({\n        id: res.id,\n        name: res.name,\n        slug: res.slug\n      })),\n      gameList: await getGameListData('genres', this.props.match.params.category, 'rating')\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location.pathname !== this.props.location.pathname) {\n      getGameListData('genres', this.props.match.params.category, 'rating').then(result => this.setState({\n        gameList: result\n      }));\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.clearGameListAction();\n  }\n\n  render() {\n    if (!this.state.gameList.length) {\n      return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 14\n      }, this);\n    }\n\n    const galleryData = this.state.gameList.map(game => /*#__PURE__*/_jsxDEV(GameItem, {\n      game: game\n    }, game.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"w-100 py-5\",\n      id: \"browse-container\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: {\n            order: 2\n          },\n          lg: {\n            span: 10,\n            order: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pb-2\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [`Browsing `, /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"browsing-title\",\n                children: this.props.location.paramName ? this.props.location.paramName : this.props.match.params.category.replace(/-/g, ' ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), ` Games`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-wrap align-content-center\",\n            children: galleryData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: {\n            span: 12,\n            order: 1\n          },\n          lg: {\n            span: 2,\n            order: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(CategoryList, {\n            genreList: this.state.genreList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    item: state.list.single\n  };\n}\n\nexport default connect(mapStateToProps, {\n  clearGameListAction\n})(BrowsePage);","map":{"version":3,"sources":["/Users/michellepoole/Desktop/videogame-store/src/components/browse/BrowsePage.js"],"names":["React","Component","connect","Container","Row","Col","getGameListData","getGenreListData","clearGameListAction","CategoryList","GameItem","LoadingSpinner","BrowsePage","constructor","props","state","genreList","gameList","componentDidMount","genreResponse","setState","map","res","id","name","slug","match","params","category","componentDidUpdate","prevProps","location","pathname","then","result","componentWillUnmount","render","length","galleryData","game","order","span","paramName","replace","mapStateToProps","item","list","single"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { getGameListData, getGenreListData } from '../../actions/rawg-api';\nimport { clearGameListAction } from '../../actions/index';\nimport CategoryList from './CategoryListMobile';\nimport GameItem from '../landing_page/game_list/game_item';\nimport LoadingSpinner from '../shared/loading_spinner';\nimport '../../scss/browse/browse.scss';\n\nclass BrowsePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      genreList: [],\n      gameList: [],\n    };\n  }\n\n  async componentDidMount() {\n    const genreResponse = await getGenreListData();\n    this.setState({\n      genreList: genreResponse.map((res) => ({\n        id: res.id,\n        name: res.name,\n        slug: res.slug,\n      })),\n      gameList: await getGameListData(\n        'genres',\n        this.props.match.params.category,\n        'rating'\n      ),\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location.pathname !== this.props.location.pathname) {\n      getGameListData(\n        'genres',\n        this.props.match.params.category,\n        'rating'\n      ).then((result) =>\n        this.setState({\n          gameList: result,\n        })\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.clearGameListAction();\n  }\n\n  render() {\n    if (!this.state.gameList.length) {\n      return <LoadingSpinner />;\n    }\n\n    const galleryData = this.state.gameList.map((game) => (\n      <GameItem key={game.id} game={game} />\n    ));\n\n    return (\n      <Container className=\"w-100 py-5\" id=\"browse-container\">\n        <Row>\n          <Col xs={{ order: 2 }} lg={{ span: 10, order: 1 }}>\n            <div className=\"pb-2\">\n              <p>\n                {`Browsing `}\n                <span className=\"browsing-title\">\n                  {this.props.location.paramName\n                    ? this.props.location.paramName\n                    : this.props.match.params.category.replace(/-/g, ' ')}\n                </span>\n                {` Games`}\n              </p>\n            </div>\n            <div className=\"d-flex flex-wrap align-content-center\">\n              {galleryData}\n            </div>\n          </Col>\n          <Col xs={{ span: 12, order: 1 }} lg={{ span: 2, order: 2 }}>\n            <CategoryList genreList={this.state.genreList} />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    item: state.list.single,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  clearGameListAction,\n})(BrowsePage);\n"]},"metadata":{},"sourceType":"module"}
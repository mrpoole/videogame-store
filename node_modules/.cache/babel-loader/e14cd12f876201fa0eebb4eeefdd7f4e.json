{"ast":null,"code":"'use strict';\n\nlet {\n  fileURLToPath,\n  pathToFileURL\n} = require('url');\n\nlet {\n  resolve,\n  isAbsolute\n} = require('path');\n\nlet {\n  nanoid\n} = require('nanoid/non-secure');\n\nlet terminalHighlight = require('./terminal-highlight');\n\nlet CssSyntaxError = require('./css-syntax-error');\n\nlet PreviousMap = require('./previous-map');\n\nclass Input {\n  constructor(css, opts = {}) {\n    if (css === null || typeof css === 'undefined' || typeof css === 'object' && !css.toString) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`);\n    }\n\n    this.css = css.toString();\n\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n      this.hasBOM = true;\n      this.css = this.css.slice(1);\n    } else {\n      this.hasBOM = false;\n    }\n\n    if (opts.from) {\n      if (/^\\w+:\\/\\//.test(opts.from) || isAbsolute(opts.from)) {\n        this.file = opts.from;\n      } else {\n        this.file = resolve(opts.from);\n      }\n    }\n\n    let map = new PreviousMap(this.css, opts);\n\n    if (map.text) {\n      this.map = map;\n      let file = map.consumer().file;\n      if (!this.file && file) this.file = this.mapResolve(file);\n    }\n\n    if (!this.file) {\n      this.id = '<input css ' + nanoid(6) + '>';\n    }\n\n    if (this.map) this.map.file = this.from;\n  }\n\n  fromOffset(offset) {\n    let lines = this.css.split('\\n');\n    let lineToIndex = new Array(lines.length);\n    let prevIndex = 0;\n\n    for (let i = 0, l = lines.length; i < l; i++) {\n      lineToIndex[i] = prevIndex;\n      prevIndex += lines[i].length + 1;\n    }\n\n    let lastLine = lineToIndex[lineToIndex.length - 1];\n\n    this.fromOffset = index => {\n      let min = 0;\n\n      if (index >= lastLine) {\n        min = lineToIndex.length - 1;\n      } else {\n        let max = lineToIndex.length - 2;\n        let mid;\n\n        while (min < max) {\n          mid = min + (max - min >> 1);\n\n          if (index < lineToIndex[mid]) {\n            max = mid - 1;\n          } else if (index >= lineToIndex[mid + 1]) {\n            min = mid + 1;\n          } else {\n            min = mid;\n            break;\n          }\n        }\n      }\n\n      return {\n        line: min + 1,\n        col: index - lineToIndex[min] + 1\n      };\n    };\n\n    return this.fromOffset(offset);\n  }\n\n  error(message, line, column, opts = {}) {\n    let result;\n\n    if (!column) {\n      let pos = this.fromOffset(line);\n      line = pos.line;\n      column = pos.col;\n    }\n\n    let origin = this.origin(line, column);\n\n    if (origin) {\n      result = new CssSyntaxError(message, origin.line, origin.column, origin.source, origin.file, opts.plugin);\n    } else {\n      result = new CssSyntaxError(message, line, column, this.css, this.file, opts.plugin);\n    }\n\n    result.input = {\n      line,\n      column,\n      source: this.css\n    };\n\n    if (this.file) {\n      result.input.url = pathToFileURL(this.file).toString();\n      result.input.file = this.file;\n    }\n\n    return result;\n  }\n\n  origin(line, column) {\n    if (!this.map) return false;\n    let consumer = this.map.consumer();\n    let from = consumer.originalPositionFor({\n      line,\n      column\n    });\n    if (!from.source) return false;\n    let fromUrl;\n\n    if (isAbsolute(from.source)) {\n      fromUrl = pathToFileURL(from.source);\n    } else {\n      fromUrl = new URL(from.source, this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile));\n    }\n\n    let result = {\n      url: fromUrl.toString(),\n      line: from.line,\n      column: from.column\n    };\n\n    if (fromUrl.protocol === 'file:') {\n      result.file = fileURLToPath(fromUrl);\n    }\n\n    let source = consumer.sourceContentFor(from.source);\n    if (source) result.source = source;\n    return result;\n  }\n\n  mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file;\n    }\n\n    return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file);\n  }\n\n  get from() {\n    return this.file || this.id;\n  }\n\n}\n\nmodule.exports = Input;\nInput.default = Input;\n\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input);\n}","map":{"version":3,"sources":["/Users/michellepoole/Desktop/videogame-store/node_modules/sanitize-html/node_modules/postcss/lib/input.js"],"names":["fileURLToPath","pathToFileURL","require","resolve","isAbsolute","nanoid","terminalHighlight","CssSyntaxError","PreviousMap","Input","constructor","css","opts","toString","Error","hasBOM","slice","from","test","file","map","text","consumer","mapResolve","id","fromOffset","offset","lines","split","lineToIndex","Array","length","prevIndex","i","l","lastLine","index","min","max","mid","line","col","error","message","column","result","pos","origin","source","plugin","input","url","originalPositionFor","fromUrl","URL","sourceRoot","mapFile","protocol","sourceContentFor","root","module","exports","default","registerInput"],"mappings":"AAAA;;AAEA,IAAI;AAAEA,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,IAAmCC,OAAO,CAAC,KAAD,CAA9C;;AACA,IAAI;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAA0BF,OAAO,CAAC,MAAD,CAArC;;AACA,IAAI;AAAEG,EAAAA;AAAF,IAAaH,OAAO,CAAC,mBAAD,CAAxB;;AAEA,IAAII,iBAAiB,GAAGJ,OAAO,CAAC,sBAAD,CAA/B;;AACA,IAAIK,cAAc,GAAGL,OAAO,CAAC,oBAAD,CAA5B;;AACA,IAAIM,WAAW,GAAGN,OAAO,CAAC,gBAAD,CAAzB;;AAEA,MAAMO,KAAN,CAAY;AACVC,EAAAA,WAAW,CAAEC,GAAF,EAAOC,IAAI,GAAG,EAAd,EAAkB;AAC3B,QACED,GAAG,KAAK,IAAR,IACA,OAAOA,GAAP,KAAe,WADf,IAEC,OAAOA,GAAP,KAAe,QAAf,IAA2B,CAACA,GAAG,CAACE,QAHnC,EAIE;AACA,YAAM,IAAIC,KAAJ,CAAW,oBAAmBH,GAAI,wBAAlC,CAAN;AACD;;AAED,SAAKA,GAAL,GAAWA,GAAG,CAACE,QAAJ,EAAX;;AAEA,QAAI,KAAKF,GAAL,CAAS,CAAT,MAAgB,QAAhB,IAA4B,KAAKA,GAAL,CAAS,CAAT,MAAgB,QAAhD,EAA0D;AACxD,WAAKI,MAAL,GAAc,IAAd;AACA,WAAKJ,GAAL,GAAW,KAAKA,GAAL,CAASK,KAAT,CAAe,CAAf,CAAX;AACD,KAHD,MAGO;AACL,WAAKD,MAAL,GAAc,KAAd;AACD;;AAED,QAAIH,IAAI,CAACK,IAAT,EAAe;AACb,UAAI,YAAYC,IAAZ,CAAiBN,IAAI,CAACK,IAAtB,KAA+Bb,UAAU,CAACQ,IAAI,CAACK,IAAN,CAA7C,EAA0D;AACxD,aAAKE,IAAL,GAAYP,IAAI,CAACK,IAAjB;AACD,OAFD,MAEO;AACL,aAAKE,IAAL,GAAYhB,OAAO,CAACS,IAAI,CAACK,IAAN,CAAnB;AACD;AACF;;AAED,QAAIG,GAAG,GAAG,IAAIZ,WAAJ,CAAgB,KAAKG,GAArB,EAA0BC,IAA1B,CAAV;;AACA,QAAIQ,GAAG,CAACC,IAAR,EAAc;AACZ,WAAKD,GAAL,GAAWA,GAAX;AACA,UAAID,IAAI,GAAGC,GAAG,CAACE,QAAJ,GAAeH,IAA1B;AACA,UAAI,CAAC,KAAKA,IAAN,IAAcA,IAAlB,EAAwB,KAAKA,IAAL,GAAY,KAAKI,UAAL,CAAgBJ,IAAhB,CAAZ;AACzB;;AAED,QAAI,CAAC,KAAKA,IAAV,EAAgB;AACd,WAAKK,EAAL,GAAU,gBAAgBnB,MAAM,CAAC,CAAD,CAAtB,GAA4B,GAAtC;AACD;;AACD,QAAI,KAAKe,GAAT,EAAc,KAAKA,GAAL,CAASD,IAAT,GAAgB,KAAKF,IAArB;AACf;;AAEDQ,EAAAA,UAAU,CAAEC,MAAF,EAAU;AAClB,QAAIC,KAAK,GAAG,KAAKhB,GAAL,CAASiB,KAAT,CAAe,IAAf,CAAZ;AACA,QAAIC,WAAW,GAAG,IAAIC,KAAJ,CAAUH,KAAK,CAACI,MAAhB,CAAlB;AACA,QAAIC,SAAS,GAAG,CAAhB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGP,KAAK,CAACI,MAA1B,EAAkCE,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5CJ,MAAAA,WAAW,CAACI,CAAD,CAAX,GAAiBD,SAAjB;AACAA,MAAAA,SAAS,IAAIL,KAAK,CAACM,CAAD,CAAL,CAASF,MAAT,GAAkB,CAA/B;AACD;;AAED,QAAII,QAAQ,GAAGN,WAAW,CAACA,WAAW,CAACE,MAAZ,GAAqB,CAAtB,CAA1B;;AAEA,SAAKN,UAAL,GAAkBW,KAAK,IAAI;AACzB,UAAIC,GAAG,GAAG,CAAV;;AACA,UAAID,KAAK,IAAID,QAAb,EAAuB;AACrBE,QAAAA,GAAG,GAAGR,WAAW,CAACE,MAAZ,GAAqB,CAA3B;AACD,OAFD,MAEO;AACL,YAAIO,GAAG,GAAGT,WAAW,CAACE,MAAZ,GAAqB,CAA/B;AACA,YAAIQ,GAAJ;;AACA,eAAOF,GAAG,GAAGC,GAAb,EAAkB;AAChBC,UAAAA,GAAG,GAAGF,GAAG,IAAKC,GAAG,GAAGD,GAAP,IAAe,CAAnB,CAAT;;AACA,cAAID,KAAK,GAAGP,WAAW,CAACU,GAAD,CAAvB,EAA8B;AAC5BD,YAAAA,GAAG,GAAGC,GAAG,GAAG,CAAZ;AACD,WAFD,MAEO,IAAIH,KAAK,IAAIP,WAAW,CAACU,GAAG,GAAG,CAAP,CAAxB,EAAmC;AACxCF,YAAAA,GAAG,GAAGE,GAAG,GAAG,CAAZ;AACD,WAFM,MAEA;AACLF,YAAAA,GAAG,GAAGE,GAAN;AACA;AACD;AACF;AACF;;AACD,aAAO;AACLC,QAAAA,IAAI,EAAEH,GAAG,GAAG,CADP;AAELI,QAAAA,GAAG,EAAEL,KAAK,GAAGP,WAAW,CAACQ,GAAD,CAAnB,GAA2B;AAF3B,OAAP;AAID,KAvBD;;AAwBA,WAAO,KAAKZ,UAAL,CAAgBC,MAAhB,CAAP;AACD;;AAEDgB,EAAAA,KAAK,CAAEC,OAAF,EAAWH,IAAX,EAAiBI,MAAjB,EAAyBhC,IAAI,GAAG,EAAhC,EAAoC;AACvC,QAAIiC,MAAJ;;AACA,QAAI,CAACD,MAAL,EAAa;AACX,UAAIE,GAAG,GAAG,KAAKrB,UAAL,CAAgBe,IAAhB,CAAV;AACAA,MAAAA,IAAI,GAAGM,GAAG,CAACN,IAAX;AACAI,MAAAA,MAAM,GAAGE,GAAG,CAACL,GAAb;AACD;;AACD,QAAIM,MAAM,GAAG,KAAKA,MAAL,CAAYP,IAAZ,EAAkBI,MAAlB,CAAb;;AACA,QAAIG,MAAJ,EAAY;AACVF,MAAAA,MAAM,GAAG,IAAItC,cAAJ,CACPoC,OADO,EAEPI,MAAM,CAACP,IAFA,EAGPO,MAAM,CAACH,MAHA,EAIPG,MAAM,CAACC,MAJA,EAKPD,MAAM,CAAC5B,IALA,EAMPP,IAAI,CAACqC,MANE,CAAT;AAQD,KATD,MASO;AACLJ,MAAAA,MAAM,GAAG,IAAItC,cAAJ,CACPoC,OADO,EAEPH,IAFO,EAGPI,MAHO,EAIP,KAAKjC,GAJE,EAKP,KAAKQ,IALE,EAMPP,IAAI,CAACqC,MANE,CAAT;AAQD;;AAEDJ,IAAAA,MAAM,CAACK,KAAP,GAAe;AAAEV,MAAAA,IAAF;AAAQI,MAAAA,MAAR;AAAgBI,MAAAA,MAAM,EAAE,KAAKrC;AAA7B,KAAf;;AACA,QAAI,KAAKQ,IAAT,EAAe;AACb0B,MAAAA,MAAM,CAACK,KAAP,CAAaC,GAAb,GAAmBlD,aAAa,CAAC,KAAKkB,IAAN,CAAb,CAAyBN,QAAzB,EAAnB;AACAgC,MAAAA,MAAM,CAACK,KAAP,CAAa/B,IAAb,GAAoB,KAAKA,IAAzB;AACD;;AAED,WAAO0B,MAAP;AACD;;AAEDE,EAAAA,MAAM,CAAEP,IAAF,EAAQI,MAAR,EAAgB;AACpB,QAAI,CAAC,KAAKxB,GAAV,EAAe,OAAO,KAAP;AACf,QAAIE,QAAQ,GAAG,KAAKF,GAAL,CAASE,QAAT,EAAf;AAEA,QAAIL,IAAI,GAAGK,QAAQ,CAAC8B,mBAAT,CAA6B;AAAEZ,MAAAA,IAAF;AAAQI,MAAAA;AAAR,KAA7B,CAAX;AACA,QAAI,CAAC3B,IAAI,CAAC+B,MAAV,EAAkB,OAAO,KAAP;AAElB,QAAIK,OAAJ;;AAEA,QAAIjD,UAAU,CAACa,IAAI,CAAC+B,MAAN,CAAd,EAA6B;AAC3BK,MAAAA,OAAO,GAAGpD,aAAa,CAACgB,IAAI,CAAC+B,MAAN,CAAvB;AACD,KAFD,MAEO;AACLK,MAAAA,OAAO,GAAG,IAAIC,GAAJ,CACRrC,IAAI,CAAC+B,MADG,EAER,KAAK5B,GAAL,CAASE,QAAT,GAAoBiC,UAApB,IAAkCtD,aAAa,CAAC,KAAKmB,GAAL,CAASoC,OAAV,CAFvC,CAAV;AAID;;AAED,QAAIX,MAAM,GAAG;AACXM,MAAAA,GAAG,EAAEE,OAAO,CAACxC,QAAR,EADM;AAEX2B,MAAAA,IAAI,EAAEvB,IAAI,CAACuB,IAFA;AAGXI,MAAAA,MAAM,EAAE3B,IAAI,CAAC2B;AAHF,KAAb;;AAMA,QAAIS,OAAO,CAACI,QAAR,KAAqB,OAAzB,EAAkC;AAChCZ,MAAAA,MAAM,CAAC1B,IAAP,GAAcnB,aAAa,CAACqD,OAAD,CAA3B;AACD;;AAED,QAAIL,MAAM,GAAG1B,QAAQ,CAACoC,gBAAT,CAA0BzC,IAAI,CAAC+B,MAA/B,CAAb;AACA,QAAIA,MAAJ,EAAYH,MAAM,CAACG,MAAP,GAAgBA,MAAhB;AAEZ,WAAOH,MAAP;AACD;;AAEDtB,EAAAA,UAAU,CAAEJ,IAAF,EAAQ;AAChB,QAAI,YAAYD,IAAZ,CAAiBC,IAAjB,CAAJ,EAA4B;AAC1B,aAAOA,IAAP;AACD;;AACD,WAAOhB,OAAO,CAAC,KAAKiB,GAAL,CAASE,QAAT,GAAoBiC,UAApB,IAAkC,KAAKnC,GAAL,CAASuC,IAA3C,IAAmD,GAApD,EAAyDxC,IAAzD,CAAd;AACD;;AAED,MAAIF,IAAJ,GAAY;AACV,WAAO,KAAKE,IAAL,IAAa,KAAKK,EAAzB;AACD;;AA/JS;;AAkKZoC,MAAM,CAACC,OAAP,GAAiBpD,KAAjB;AACAA,KAAK,CAACqD,OAAN,GAAgBrD,KAAhB;;AAEA,IAAIH,iBAAiB,IAAIA,iBAAiB,CAACyD,aAA3C,EAA0D;AACxDzD,EAAAA,iBAAiB,CAACyD,aAAlB,CAAgCtD,KAAhC;AACD","sourcesContent":["'use strict'\n\nlet { fileURLToPath, pathToFileURL } = require('url')\nlet { resolve, isAbsolute } = require('path')\nlet { nanoid } = require('nanoid/non-secure')\n\nlet terminalHighlight = require('./terminal-highlight')\nlet CssSyntaxError = require('./css-syntax-error')\nlet PreviousMap = require('./previous-map')\n\nclass Input {\n  constructor (css, opts = {}) {\n    if (\n      css === null ||\n      typeof css === 'undefined' ||\n      (typeof css === 'object' && !css.toString)\n    ) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`)\n    }\n\n    this.css = css.toString()\n\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n      this.hasBOM = true\n      this.css = this.css.slice(1)\n    } else {\n      this.hasBOM = false\n    }\n\n    if (opts.from) {\n      if (/^\\w+:\\/\\//.test(opts.from) || isAbsolute(opts.from)) {\n        this.file = opts.from\n      } else {\n        this.file = resolve(opts.from)\n      }\n    }\n\n    let map = new PreviousMap(this.css, opts)\n    if (map.text) {\n      this.map = map\n      let file = map.consumer().file\n      if (!this.file && file) this.file = this.mapResolve(file)\n    }\n\n    if (!this.file) {\n      this.id = '<input css ' + nanoid(6) + '>'\n    }\n    if (this.map) this.map.file = this.from\n  }\n\n  fromOffset (offset) {\n    let lines = this.css.split('\\n')\n    let lineToIndex = new Array(lines.length)\n    let prevIndex = 0\n\n    for (let i = 0, l = lines.length; i < l; i++) {\n      lineToIndex[i] = prevIndex\n      prevIndex += lines[i].length + 1\n    }\n\n    let lastLine = lineToIndex[lineToIndex.length - 1]\n\n    this.fromOffset = index => {\n      let min = 0\n      if (index >= lastLine) {\n        min = lineToIndex.length - 1\n      } else {\n        let max = lineToIndex.length - 2\n        let mid\n        while (min < max) {\n          mid = min + ((max - min) >> 1)\n          if (index < lineToIndex[mid]) {\n            max = mid - 1\n          } else if (index >= lineToIndex[mid + 1]) {\n            min = mid + 1\n          } else {\n            min = mid\n            break\n          }\n        }\n      }\n      return {\n        line: min + 1,\n        col: index - lineToIndex[min] + 1\n      }\n    }\n    return this.fromOffset(offset)\n  }\n\n  error (message, line, column, opts = {}) {\n    let result\n    if (!column) {\n      let pos = this.fromOffset(line)\n      line = pos.line\n      column = pos.col\n    }\n    let origin = this.origin(line, column)\n    if (origin) {\n      result = new CssSyntaxError(\n        message,\n        origin.line,\n        origin.column,\n        origin.source,\n        origin.file,\n        opts.plugin\n      )\n    } else {\n      result = new CssSyntaxError(\n        message,\n        line,\n        column,\n        this.css,\n        this.file,\n        opts.plugin\n      )\n    }\n\n    result.input = { line, column, source: this.css }\n    if (this.file) {\n      result.input.url = pathToFileURL(this.file).toString()\n      result.input.file = this.file\n    }\n\n    return result\n  }\n\n  origin (line, column) {\n    if (!this.map) return false\n    let consumer = this.map.consumer()\n\n    let from = consumer.originalPositionFor({ line, column })\n    if (!from.source) return false\n\n    let fromUrl\n\n    if (isAbsolute(from.source)) {\n      fromUrl = pathToFileURL(from.source)\n    } else {\n      fromUrl = new URL(\n        from.source,\n        this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)\n      )\n    }\n\n    let result = {\n      url: fromUrl.toString(),\n      line: from.line,\n      column: from.column\n    }\n\n    if (fromUrl.protocol === 'file:') {\n      result.file = fileURLToPath(fromUrl)\n    }\n\n    let source = consumer.sourceContentFor(from.source)\n    if (source) result.source = source\n\n    return result\n  }\n\n  mapResolve (file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file\n    }\n    return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file)\n  }\n\n  get from () {\n    return this.file || this.id\n  }\n}\n\nmodule.exports = Input\nInput.default = Input\n\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input)\n}\n"]},"metadata":{},"sourceType":"script"}
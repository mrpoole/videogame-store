{"ast":null,"code":"import axios from 'axios';\nimport config from '../config';\nconst RAWG_CONFIG = {\n  baseUrl: 'https://rawg-video-games-database.p.rapidapi.com/',\n  headers: {\n    'x-rapidapi-key': config.RAWG_API_KEY,\n    'x-rapidapi-host': 'rawg-video-games-database.p.rapidapi.com',\n    useQueryString: true\n  }\n};\nexport async function getGenreGamesList() {\n  const options = {\n    method: 'GET',\n    url: 'https://rawg-video-games-database.p.rapidapi.com/games/genres',\n    headers: {\n      'x-rapidapi-key': config.RAWG_API_KEY,\n      'x-rapidapi-host': 'rawg-video-games-database.p.rapidapi.com'\n    },\n    params: {\n      genre: 4,\n      ordering: 'released'\n    }\n  };\n  console.log('options', options);\n  let list;\n  await axios.request(options).then(resp => {\n    list = resp.data.results;\n  }).catch(error => {\n    console.error(error);\n  });\n  return list;\n}\nexport async function getGenreListData() {\n  const options = {\n    method: 'GET',\n    url: 'https://rawg-video-games-database.p.rapidapi.com/genres',\n    headers: {\n      'x-rapidapi-key': config.RAWG_API_KEY,\n      'x-rapidapi-host': 'rawg-video-games-database.p.rapidapi.com'\n    }\n  };\n  let list;\n  await axios.request(options).then(resp => {\n    list = resp.data.results;\n  }).catch(error => {\n    console.error(error);\n  });\n  return list;\n}\nexport async function getGameListData(queryCategory = null, queryItem = null) {\n  // sample url with query string: https://rawg-video-games-database.p.rapidapi.com/games?genres=action\n  const query = queryCategory ? `?${queryCategory}=${queryItem}` : '';\n  const options = {\n    method: 'GET',\n    url: `${RAWG_CONFIG.baseUrl}games${query}`,\n    headers: RAWG_CONFIG.headers\n  };\n  let list;\n  await axios.request(options).then(resp => {\n    list = resp.data.results;\n  }).catch(error => {\n    console.error(error);\n  });\n  return list;\n}\nexport async function getSingleGameData(id) {\n  const options = {\n    method: 'GET',\n    url: `${RAWG_CONFIG.baseUrl}games/${id}`,\n    headers: RAWG_CONFIG.headers\n  };\n  let item;\n  await axios.request(options).then(resp => {\n    item = resp.data;\n  }).catch(error => {\n    console.error(error);\n  });\n  return item;\n}","map":{"version":3,"sources":["/Users/michellepoole/Desktop/videogame-store/src/actions/rawg-api.js"],"names":["axios","config","RAWG_CONFIG","baseUrl","headers","RAWG_API_KEY","useQueryString","getGenreGamesList","options","method","url","params","genre","ordering","console","log","list","request","then","resp","data","results","catch","error","getGenreListData","getGameListData","queryCategory","queryItem","query","getSingleGameData","id","item"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport config from '../config';\n\nconst RAWG_CONFIG = {\n  baseUrl: 'https://rawg-video-games-database.p.rapidapi.com/',\n  headers: {\n    'x-rapidapi-key': config.RAWG_API_KEY,\n    'x-rapidapi-host': 'rawg-video-games-database.p.rapidapi.com',\n    useQueryString: true,\n  },\n};\n\nexport async function getGenreGamesList() {\n  const options = {\n    method: 'GET',\n    url: 'https://rawg-video-games-database.p.rapidapi.com/games/genres',\n    headers: {\n      'x-rapidapi-key': config.RAWG_API_KEY,\n      'x-rapidapi-host': 'rawg-video-games-database.p.rapidapi.com',\n    },\n    params: {\n      genre: 4,\n      ordering: 'released',\n    },\n  };\n\n  console.log('options', options)\n  let list;\n\n  await axios\n    .request(options)\n    .then((resp) => {\n      list = resp.data.results;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n  return list;\n}\n\nexport async function getGenreListData() {\n  const options = {\n    method: 'GET',\n    url: 'https://rawg-video-games-database.p.rapidapi.com/genres',\n    headers: {\n      'x-rapidapi-key': config.RAWG_API_KEY,\n      'x-rapidapi-host': 'rawg-video-games-database.p.rapidapi.com',\n    },\n  };\n\n  let list;\n\n  await axios\n    .request(options)\n    .then((resp) => {\n      list = resp.data.results;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n  return list;\n}\n\nexport async function getGameListData(queryCategory = null, queryItem = null) {\n  // sample url with query string: https://rawg-video-games-database.p.rapidapi.com/games?genres=action\n  const query = queryCategory ? `?${queryCategory}=${queryItem}` : '';\n  const options = {\n    method: 'GET',\n    url: `${RAWG_CONFIG.baseUrl}games${query}`,\n    headers: RAWG_CONFIG.headers,\n  };\n\n  let list;\n\n  await axios\n    .request(options)\n    .then((resp) => {\n      list = resp.data.results;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n  return list;\n}\n\nexport async function getSingleGameData(id) {\n  const options = {\n    method: 'GET',\n    url: `${RAWG_CONFIG.baseUrl}games/${id}`,\n    headers: RAWG_CONFIG.headers,\n  };\n\n  let item;\n\n  await axios\n    .request(options)\n    .then((resp) => {\n      item = resp.data;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n  return item;\n}\n"]},"metadata":{},"sourceType":"module"}